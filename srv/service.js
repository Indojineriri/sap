/**
 * Code is auto-generated by Application Logic, DO NOT EDIT.
 * @version(2.0)
 */
const LCAPApplicationService = require('@sap/low-code-event-handler');
const before_Allocationdifficultcases_Create = require('./code/before-allocationdifficultcases-create');
const before_Airecommendations_Create = require('./code/before-airecommendations-create');
const before_Humandecisions_Create = require('./code/before-humandecisions-create');
const before_Orderitems_Process = require('./code/before-orderitems-process');
const after_Inventory_Update = require('./code/after-inventory-update');
const after_Inventory_Inbound = require('./code/after-inventory-inbound');
const after_Allocationdifficultcases_Escalate = require('./code/after-allocationdifficultcases-escalate');
const before_Orderitems_Validate = require('./code/before-orderitems-validate');
const before_Airecommendations_Flag = require('./code/before-airecommendations-flag');
const after_Allocationdifficultcases_Alert = require('./code/after-allocationdifficultcases-alert');

class reception_autoSrv extends LCAPApplicationService {
    async init() {

        this.before('CREATE', 'AllocationDifficultCases', async (request) => {
            await before_Allocationdifficultcases_Create(request);
        });

        this.before('CREATE', 'AIRecommendations', async (request) => {
            await before_Airecommendations_Create(request);
        });

        this.before('CREATE', 'HumanDecisions', async (request) => {
            await before_Humandecisions_Create(request);
        });

        this.before('PROCESS', 'OrderItems', async (request) => {
            return before_Orderitems_Process(request);
        });

        this.after('UPDATE', 'Inventory', async (results, request) => {
            await after_Inventory_Update(results, request);
        });

        this.after('INBOUND', 'Inventory', async (results, request) => {
            return after_Inventory_Inbound(results, request);
        });

        this.after('ESCALATE', 'AllocationDifficultCases', async (results, request) => {
            return after_Allocationdifficultcases_Escalate(results, request);
        });

        this.before('VALIDATE', 'OrderItems', async (request) => {
            return before_Orderitems_Validate(request);
        });

        this.before('FLAG', 'AIRecommendations', async (request) => {
            return before_Airecommendations_Flag(request);
        });

        this.after('ALERT', 'AllocationDifficultCases', async (results, request) => {
            return after_Allocationdifficultcases_Alert(results, request);
        });

        return super.init();
    }
}


module.exports = {
    reception_autoSrv
};